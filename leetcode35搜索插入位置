class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int len = nums.size();
        int L = 0;
        int R = len - 1;
        while (L <= R) {
            int mid = L + (R - L) / 2;
            if (nums[mid] < target) { //elem in [L, mid] < target
                L = mid + 1;
            } else if (nums[mid] == target) {//Match!
                return mid;
            } else { //elem in [mid, R] > target
                R = mid - 1;
            }
        }

        //we don't find the target in nums
        /*
        * * * 3 * * *     [0, L - 1] < 3
              L           [R + 1, len - 1] > 3
              R
              M
        when target=4, L=M+1, R=M, insert at L
        when target=2, L=M,   R=M-1, insert at L
        */
        return L;
    }
};
